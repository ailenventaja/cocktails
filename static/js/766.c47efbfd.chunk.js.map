{"version":3,"file":"static/js/766.c47efbfd.chunk.js","mappings":"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","sources":["components/Gallery/index.js","pages/favorites/index.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Paper } from \"@mui/material\";\r\nimport {\r\n  ImageList,\r\n  ImageListItem,\r\n  ImageListItemBar,\r\n  IconButton,\r\n  Tooltip,\r\n} from \"@mui/material\";\r\nimport FavoriteIcon from \"@mui/icons-material/Favorite\";\r\nimport InfoIcon from \"@mui/icons-material/Info\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport paths from \"../../config/paths\";\r\nimport \"./style.scss\";\r\n\r\nexport default function Gallery(props) {\r\n  const navigate = useNavigate();\r\n\r\n  const drinks = props.drinks;\r\n  function useForceUpdate() {\r\n    const [value, setValue] = useState(0); // integer state\r\n    return () => setValue((value) => value + 1); // update the state to force render\r\n  }\r\n\r\n  if (props.fromFavorites) {\r\n    var xs = \"500px\";\r\n    var xsm = \"480px\";\r\n    var sm = \"420px\";\r\n    var lg = \"450px\";\r\n  } else {\r\n    var xs = \"450px\";\r\n    var xsm = \"430px\";\r\n    var sm = \"380px\";\r\n    var lg = \"390px\";\r\n  }\r\n\r\n  const openDetails = (name) => {\r\n    navigate(paths.DETAILS, {\r\n      state: {\r\n        name: name,\r\n      },\r\n    });\r\n  };\r\n  const forceUpdate = useForceUpdate();\r\n  const handleFavorites = (item) => {\r\n    var favoritesList = JSON.parse(localStorage.getItem(\"favorites\"));\r\n    if (favoritesList.find((x) => x.idDrink === item.idDrink)) {\r\n      const index = favoritesList.findIndex(\r\n        (element) => element.idDrink === item.idDrink\r\n      );\r\n      favoritesList.splice(index, 1);\r\n      if (props.fromFavorites) {\r\n        const index = drinks.findIndex(\r\n          (element) => element.idDrink === item.idDrink\r\n        );\r\n        drinks.splice(index, 1);\r\n      }\r\n    } else {\r\n      var favoriteDrink = new Object();\r\n      favoriteDrink.idDrink = item.idDrink;\r\n      favoriteDrink.strDrink = item.strDrink;\r\n      favoriteDrink.strDrinkThumb = item.strDrinkThumb;\r\n      favoritesList.push(favoriteDrink);\r\n    }\r\n    localStorage.setItem(\"favorites\", JSON.stringify(favoritesList));\r\n    console.log(JSON.parse(localStorage.getItem(\"favorites\")));\r\n    forceUpdate();\r\n  };\r\n\r\n  const getTitle = (item) => {\r\n    var favoritesList = JSON.parse(localStorage.getItem(\"favorites\"));\r\n    if (favoritesList.find((x) => x.idDrink === item.idDrink)) {\r\n      return \"Remove\";\r\n    } else {\r\n      return \"Add\";\r\n    }\r\n  };\r\n\r\n  const getClass = (item) => {\r\n    var favoritesList = JSON.parse(localStorage.getItem(\"favorites\"));\r\n    if (favoritesList.find((x) => x.idDrink === item.idDrink)) {\r\n      return \"favorite-gal\";\r\n    } else {\r\n      return \"no-favorite-gal\";\r\n    }\r\n  };\r\n  return (\r\n    <Paper elevation={0} sx={{ pr: \"20px\", pl: \"20px\" }}>\r\n      <ImageList\r\n        className=\"image-grid\"\r\n        sx={{ maxHeight: { xs: xs, xsm: xsm, sm: sm, lg: lg } }}\r\n      >\r\n        {drinks.map((item) => (\r\n          <ImageListItem\r\n            key={item.strDrinkThumb}\r\n            className=\"thumb\"\r\n            sx={{ width: \"200px\" }}\r\n          >\r\n            <Tooltip title={getTitle.call(this, item)}>\r\n              <FavoriteIcon\r\n                id=\"favorite-icon\"\r\n                sx={{ cursor: \"pointer\" }}\r\n                className={getClass.call(this, item)}\r\n                onClick={() => handleFavorites(item)}\r\n              />\r\n            </Tooltip>\r\n            <img\r\n              src={`${item.strDrinkThumb}?w=200&fit=crop&auto=format`}\r\n              srcSet={`${item.strDrinkThumb}?w=200&fit=crop&auto=format&dpr=2 2x`}\r\n              alt={item.strDrink}\r\n              loading=\"lazy\"\r\n            />\r\n            <ImageListItemBar\r\n              className=\"info\"\r\n              title={item.strDrink}\r\n              actionIcon={\r\n                <IconButton\r\n                  sx={{ color: \"rgba(255, 255, 255, 0.54)\" }}\r\n                  aria-label={`info about ${item.strDrink}`}\r\n                  onClick={() => openDetails(item.strDrink)}\r\n                >\r\n                  <InfoIcon />\r\n                </IconButton>\r\n              }\r\n            />\r\n          </ImageListItem>\r\n        ))}\r\n      </ImageList>\r\n    </Paper>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Gallery from \"../../components/Gallery\";\r\n\r\nexport default function Ingredients() {\r\n  var favoritesList = JSON.parse(localStorage.getItem(\"favorites\"));\r\n\r\n  return <Gallery drinks={favoritesList} fromFavorites={true} />;\r\n}\r\n"],"names":["Gallery","props","navigate","useNavigate","drinks","fromFavorites","xs","xsm","sm","lg","forceUpdate","useState","setValue","value","useForceUpdate","getTitle","item","JSON","parse","localStorage","getItem","find","x","idDrink","getClass","Paper","elevation","sx","pr","pl","ImageList","className","maxHeight","map","ImageListItem","width","Tooltip","title","call","Favorite","id","cursor","onClick","favoritesList","index","findIndex","element","splice","favoriteDrink","Object","strDrink","strDrinkThumb","push","setItem","stringify","console","log","handleFavorites","src","srcSet","alt","loading","ImageListItemBar","actionIcon","IconButton","color","name","paths","state","Info","Ingredients"],"sourceRoot":""}